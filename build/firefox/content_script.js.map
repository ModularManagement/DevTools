{"version":3,"sources":["webpack:///content_script.js","webpack:///webpack/bootstrap 7e5468300750ca73535f","webpack:///./src/content_script.js"],"names":["starcounterDebugAid","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","chrome","browser","runtime","onMessage","addListener","message","sender","sendResponse","content","document","querySelector","window","dispatchEvent","CustomEvent","type","popupIndexScriptUrl","extension","getURL","localStorage","setItem","url","script","createElement","src","body","appendChild"],"mappings":"AAAA,GAAIA,qBACK,SAAUC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4DA,OAhCAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,4BAGAzB,IAAA0B,EAAA,KDOM,SAAUtB,EAAQD,GEjExB,GAAsB,mBAAXwB,aAA6C,KAAZC,EAC1C,GAAIA,GAAUD,MAEhB,QACqB,KAAZC,GACPA,EAAQC,SACRD,EAAQC,QAAQC,UAChB,CACAF,EAAQC,QAAQC,UAAUC,YAAY,SAACC,EAASC,EAAQC,GACtD,GAAKF,GAAYA,EAAQG,QACzB,OAAQH,EAAQG,SACd,IAAK,kCACHD,EACEE,SAASC,cAAc,mCACnB,OACA,QAEN,MACF,KAAK,eACHC,OAAOC,cAAc,GAAIC,aAAY,iBAAmBR,EAAQS,SAQtE,IAAMC,GAAsBd,EAAQe,UAAUC,OAAO,oBACrDC,cAAaC,QAAQ,6BAA8BJ,EAEnD,IAAMK,GAAMnB,EAAQe,UAAUC,OAAO,sBAC/BI,EAASZ,SAASa,cAAc,SACtCD,GAAOE,IAAMH,EACbX,SAASe,KAAKC,YAAYJ,GAE1BZ,SAASe,KAAKC,YAAYhB,SAASa,cAAc","file":"content_script.js","sourcesContent":["var starcounterDebugAid =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/sys/jsoneditor/dist/img/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/* this file injects starcounter-debug-aid's logic inside the page, \r\nmost probably you'll neither need to understand nor to modify it. */\n\nif (typeof chrome !== 'undefined' && typeof browser === 'undefined') {\n  var browser = chrome;\n}\nif (typeof browser !== 'undefined' && browser.runtime && browser.runtime.onMessage) {\n  browser.runtime.onMessage.addListener(function (message, sender, sendResponse) {\n    if (!message || !message.content) return;\n    switch (message.content) {\n      case 'Hey! Are you a Starcounter app?':\n        sendResponse(document.querySelector('puppet-client, palindrom-client') ? 'Yup!' : 'Nope!');\n        break;\n      case 'showDebugAid':\n        window.dispatchEvent(new CustomEvent('sc-debug-show-' + message.type));\n        break;\n    }\n  });\n\n  /* We need to import the built script instead of just running it. \r\n     This gives up access to JS variables */\n\n  var popupIndexScriptUrl = browser.extension.getURL('ui-popup-build.js');\n  localStorage.setItem('scDebugPopupIndexScriptUrl', popupIndexScriptUrl);\n\n  var url = browser.extension.getURL('injected_script.js');\n  var script = document.createElement('SCRIPT');\n  script.src = url;\n  document.body.appendChild(script);\n\n  document.body.appendChild(document.createElement('just-an-arbitrary-element-to-tell-sc-debug-aid-extension-was-installed'));\n}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// content_script.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/sys/jsoneditor/dist/img/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7e5468300750ca73535f","/* this file injects starcounter-debug-aid's logic inside the page, \r\nmost probably you'll neither need to understand nor to modify it. */\r\n\r\nif (typeof chrome !== 'undefined' && typeof browser === 'undefined') {\r\n  var browser = chrome;\r\n}\r\nif (\r\n  typeof browser !== 'undefined' &&\r\n  browser.runtime &&\r\n  browser.runtime.onMessage\r\n) {\r\n  browser.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n    if (!message || !message.content) return;\r\n    switch (message.content) {\r\n      case 'Hey! Are you a Starcounter app?':\r\n        sendResponse(\r\n          document.querySelector('puppet-client, palindrom-client')\r\n            ? 'Yup!'\r\n            : 'Nope!'\r\n        );\r\n        break;\r\n      case 'showDebugAid':\r\n        window.dispatchEvent(new CustomEvent('sc-debug-show-' + message.type));\r\n        break;\r\n    }\r\n  });\r\n\r\n  /* We need to import the built script instead of just running it. \r\n     This gives up access to JS variables */\r\n\r\n  const popupIndexScriptUrl = browser.extension.getURL('ui-popup-build.js');\r\n  localStorage.setItem('scDebugPopupIndexScriptUrl', popupIndexScriptUrl)\r\n\r\n  const url = browser.extension.getURL('injected_script.js');\r\n  const script = document.createElement('SCRIPT');\r\n  script.src = url;\r\n  document.body.appendChild(script);\r\n\r\n  document.body.appendChild(document.createElement('just-an-arbitrary-element-to-tell-sc-debug-aid-extension-was-installed'));\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/content_script.js"],"sourceRoot":""}